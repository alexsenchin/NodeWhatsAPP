const { Client, LocalAuth } = require('whatsapp-web.js');
const mongoose = require('mongoose');
const fs = require('fs');
const qrcode = require('qrcode-terminal');
require('dotenv').config();

// === –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ===
const LOG_PATH = './logs/chat-log.txt';
const MONGO_URI = 'mongodb://127.0.0.1:27017/whatsapp_logger';
const TARGET_GROUP_ID = process.env.TARGET_GROUP_ID;

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB ===
mongoose.connect(MONGO_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true
}).then(() => {
    console.log('üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ MongoDB');
}).catch(err => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err);
});

// === –ú–æ–¥–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è ===
const Message = mongoose.model('Message', new mongoose.Schema({
    chatId: String,
    chatName: String,
    senderName: String,
    senderNumber: String,
    message: String,
    timestamp: Date
}));

// === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ WhatsApp ===
const client = new Client({
    authStrategy: new LocalAuth()
});

// === –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ QR ===
client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

// === –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ ===
client.on('ready', () => {
    console.log('‚úÖ WhatsApp –∫–ª–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
client.on('message', async msg => {
    try {
        const chat = await msg.getChat();

        // –§–∏–ª—å—Ç—Ä: —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–∞—è –≥—Ä—É–ø–ø–∞
        if (!chat.isGroup || chat.id._serialized !== TARGET_GROUP_ID) return;

        const contact = await msg.getContact();
        const timestamp = new Date();
        const senderName = contact.pushname || contact.name || contact.number;
        const senderNumber = contact.number;
        const chatName = chat.name || chat.id.user;

        // –ó–∞–ø–∏—Å—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        const logLine = `[${timestamp.toISOString()}] [${chatName}] ${senderName}: ${msg.body}\n`;
        fs.appendFileSync(LOG_PATH, logLine);

        // –ó–∞–ø–∏—Å—å –≤ MongoDB
        await Message.create({
            chatId: chat.id._serialized,
            chatName,
            senderName,
            senderNumber,
            message: msg.body,
            timestamp
        });

        console.log(`üì• –ó–∞–ø–∏—Å–∞–Ω–æ: ${logLine.trim()}`);
    } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', err);
    }
});

// === –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ ===
client.initialize();
